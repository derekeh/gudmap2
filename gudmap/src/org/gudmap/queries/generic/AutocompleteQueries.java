package org.gudmap.queries.generic;

import java.util.ResourceBundle;

public class AutocompleteQueries {
	
	public static ResourceBundle bundle = ResourceBundle.getBundle("org.gudmap.bundles.config");
	
	public static String GENE_SYMBOLS_AND_SYNONYMS = "(SELECT DISTINCT RPR_SYMBOL GENE FROM REF_PROBE " +
			"JOIN ISH_PROBE ON PRB_MAPROBE = RPR_OID " +
			"JOIN ISH_SUBMISSION ON PRB_SUBMISSION_FK = SUB_OID " +
			"WHERE RPR_SYMBOL <> '' " +
			"AND SUB_IS_PUBLIC = 1 AND SUB_IS_DELETED = 0 AND SUB_DB_STATUS_FK = 4 " +
			"AND (SUB_ASSAY_TYPE = 'ISH' OR SUB_ASSAY_TYPE = 'IHC' OR SUB_ASSAY_TYPE = 'TG') ) " +
			//"AND RPR_SYMBOL LIKE ?) " + // 1
			"UNION " +
			"(SELECT DISTINCT RSY_SYNONYM GENE FROM REF_SYNONYM " +
			"JOIN REF_MGI_MRK ON RSY_REF = RMM_ID " +
			"JOIN REF_PROBE ON RMM_SYMBOL = RPR_SYMBOL " +
			"JOIN ISH_PROBE ON PRB_MAPROBE = RPR_OID " +
			"JOIN ISH_SUBMISSION ON PRB_SUBMISSION_FK = SUB_OID " +
			"WHERE RSY_SYNONYM <> '' " +
			"AND SUB_IS_PUBLIC = 1 AND SUB_IS_DELETED = 0 AND SUB_DB_STATUS_FK = 4 " +
			"AND (SUB_ASSAY_TYPE = 'ISH' OR SUB_ASSAY_TYPE = 'IHC' OR SUB_ASSAY_TYPE = 'TG') ) " +
			//"AND RSY_SYNONYM LIKE ?) " + // 2
			"UNION " +
			"(SELECT DISTINCT GNF_SYMBOL GENE " +
			"FROM REF_GENE_INFO )" + //WHERE GNF_SYMBOL LIKE ?) " + // 3
			"UNION " +
			"(SELECT DISTINCT RSY_SYNONYM GENE FROM REF_SYNONYM " +
			"JOIN REF_MGI_MRK ON RSY_REF = RMM_ID " +
			"JOIN REF_GENE_INFO ON RMM_SYMBOL = GNF_SYMBOL ) " +// WHERE RSY_SYNONYM LIKE ?) " + // 4
			"ORDER BY NATURAL_SORT(GENE) ";// +
			//"LIMIT ? "; // 5
	
	public static String GENE_SYMBOLS_AND_SYNONYMS2 = "SELECT DISTINCT RPR_SYMBOL GENE FROM REF_PROBE " +
			"JOIN ISH_PROBE ON PRB_MAPROBE = RPR_OID " +
			"JOIN ISH_SUBMISSION ON PRB_SUBMISSION_FK = SUB_OID " +
			"WHERE RPR_SYMBOL <> '' " +
			"AND SUB_IS_PUBLIC = 1 AND SUB_IS_DELETED = 0 AND SUB_DB_STATUS_FK = 4 " +
			"AND (SUB_ASSAY_TYPE = 'ISH' OR SUB_ASSAY_TYPE = 'IHC' OR SUB_ASSAY_TYPE = 'TG') ORDER BY NATURAL_SORT(GENE) ";

	public static String ANNATOMY_TERMS = "SELECT DISTINCT ANO_COMPONENT_NAME FROM ANA_NODE " +
			"JOIN ANAD_PART_OF_PERSPECTIVE ON ANO_OID = POP_NODE_FK " +
			"WHERE POP_PERSPECTIVE_FK = '" + bundle.getString("perspective") + "' " +
			"ORDER BY ANO_COMPONENT_NAME";
	
	public static String GO_TERMS = "SELECT DISTINCT GOT_TERM FROM REF_GO_TERM " +
			"JOIN REF_MGI_GOGENE ON GOT_ID = GOG_TERM " +
			"JOIN REF_PROBE ON GOG_MRK_ACC = RPR_LOCUS_TAG " +
			"JOIN ISH_PROBE ON PRB_MAPROBE = RPR_OID " +
			"JOIN ISH_SUBMISSION ON PRB_SUBMISSION_FK = SUB_OID " +
			"WHERE SUB_IS_PUBLIC = 1 AND SUB_IS_DELETED = 0 AND SUB_DB_STATUS_FK = 4";
	
	public static String DISEASE_NAMES_2 = "SELECT OMD_NAME FROM DIS_OMIM_DISEASE, LNK_GENE_OMIMDIS WHERE " +
			"DGA_OMIMID = OMD_OMIMID and (DGA_FLAG = 'N' || DGA_FLAG = 'U') GROUP BY OMD_NAME ORDER BY OMD_NAME";

}
