package org.gudmap.queries.collections;

public class CollectionQueries {
	
	  public final static String COLLECTION_BROWSE_EXCLUSIVE = "SELECT CLN_OID oid, CLN_NAME name, CLN_DESCRIPTION description, CLN_USER_FK userid, USR_UNAME username, " +
			 "CLN_FOCUS_GROUP focusgroupid, COUNT(*) entitycount, " +
	  		"CLN_STATUS status, CLN_LAST_UPDATED modified, CLN_TYPE type, " +
	  		"CLN_FOCUS_GROUP_NAME focusgroupname " +
	  		"FROM CLN_COLLECTION " +
	  		"JOIN REF_USER ON USR_OID = CLN_USER_FK " +
	  		"JOIN CLN_COLLECTION_ITEM ON CLI_COLLECTION_FK = CLN_OID " +
	  		"%s CLN_TYPE = ? " +
	  		"AND CLN_USER_FK = ? " +
	  		"GROUP BY CLN_OID ORDER BY %s %s LIMIT ?,?";
	  
	  public final static String COLLECTION_BROWSE_OTHERS = "SELECT CLN_OID oid, CLN_NAME name, CLN_DESCRIPTION description, CLN_USER_FK userid, USR_UNAME username, " +
			"CLN_FOCUS_GROUP focusgroupid, COUNT(*) entitycount, " +
			"CLN_STATUS status, DATE_FORMAT(CLN_LAST_UPDATED,'%%e %%b %%Y') modified, CLN_TYPE type, " +
			"CLN_FOCUS_GROUP_NAME focusgroupname " +
			"FROM CLN_COLLECTION " +
			"JOIN REF_USER ON USR_OID = CLN_USER_FK " +
			"JOIN CLN_COLLECTION_ITEM ON CLI_COLLECTION_FK = CLN_OID " +
			"%s CLN_TYPE = ? " +
			"AND CLN_USER_FK <> ? AND CLN_STATUS = 1 " +
			"GROUP BY CLN_OID ORDER BY %s %s LIMIT ?,?";
	  
	// retrieve both own and others' shared collection entries
	  public final static String COLLECTION_BROWSE_ALL1 = "(" + COLLECTION_BROWSE_EXCLUSIVE + ")" + " UNION " + "(" + COLLECTION_BROWSE_OTHERS + ")";
	  
	  public final static String COLLECTION_BROWSE_ALL = "(SELECT CLN_OID oid, CLN_NAME name, CLN_DESCRIPTION description, CLN_USER_FK userid, USR_UNAME username, " +
			"CLN_FOCUS_GROUP focusgroupid, COUNT(*) entitycount, " +
			"CLN_STATUS status, DATE_FORMAT(CLN_LAST_UPDATED,'%%e %%b %%Y') modified, CLN_TYPE type, " +
			"CLN_FOCUS_GROUP_NAME focusgroupname " +
			  "FROM CLN_COLLECTION  JOIN REF_USER ON USR_OID = CLN_USER_FK  " +
			  "JOIN CLN_COLLECTION_ITEM ON CLI_COLLECTION_FK = CLN_OID  " +
			  "%s CLN_TYPE = ?  AND CLN_USER_FK = ?  GROUP BY CLN_OID) " +
			  "UNION " +
			  "(SELECT CLN_OID oid, CLN_NAME name, CLN_DESCRIPTION description, CLN_USER_FK userid, USR_UNAME username, " +
			"CLN_FOCUS_GROUP focusgroupid, COUNT(*) entitycount, " +
			"CLN_STATUS status, DATE_FORMAT(CLN_LAST_UPDATED,'%%e %%b %%Y') modified, CLN_TYPE type, " +
			"CLN_FOCUS_GROUP_NAME focusgroupname " +
			  "FROM CLN_COLLECTION  JOIN REF_USER ON USR_OID = CLN_USER_FK  JOIN CLN_COLLECTION_ITEM ON CLI_COLLECTION_FK = CLN_OID " +
			  "%s CLN_TYPE = ?  AND CLN_USER_FK <> ? AND CLN_STATUS = 1  GROUP BY CLN_OID) " +
			  "ORDER BY %s %s LIMIT ?,?";
	  
	  /*public final static String COLLECTION_BROWSE_ALL = "(SELECT CLN_OID, CLN_NAME, CLN_DESCRIPTION, CLN_USER_FK, USR_UNAME, CLN_FOCUS_GROUP, COUNT(*) CLN_NUMBER, " +
			  "CLN_STATUS, CLN_LAST_UPDATED, CLN_TYPE  ,CLN_FOCUS_GROUP_NAME  " +
			  "FROM CLN_COLLECTION  JOIN REF_USER ON USR_OID = CLN_USER_FK  " +
			  "JOIN CLN_COLLECTION_ITEM ON CLI_COLLECTION_FK = CLN_OID  " +
			  "%s CLN_TYPE = ?  AND CLN_USER_FK = ?  GROUP BY CLN_OID) " +
			  "UNION " +
			  "(SELECT CLN_OID, CLN_NAME, CLN_DESCRIPTION, CLN_USER_FK, USR_UNAME, CLN_FOCUS_GROUP, COUNT(*) CLN_NUMBER, CLN_STATUS, CLN_LAST_UPDATED, " +
			  "CLN_TYPE ,CLN_FOCUS_GROUP_NAME " +
			  "FROM CLN_COLLECTION  JOIN REF_USER ON USR_OID = CLN_USER_FK  JOIN CLN_COLLECTION_ITEM ON CLI_COLLECTION_FK = CLN_OID " +
			  "%s CLN_TYPE = ?  AND CLN_USER_FK <> ? AND CLN_STATUS = 1  GROUP BY CLN_OID) " +
			  "ORDER BY %s %s LIMIT ?,?";*/
	  
	  public final static String COLLECTION_DEFAULT_ORDER_BY_COL = " CLN_NAME ";
	  
	  public final static String COLLECTION_DETAIL_BY_ID = "SELECT CLN_OID, CLN_NAME, CLN_USER_FK, USR_UNAME, CLN_TYPE, CLN_STATUS, CLN_DESCRIPTION, CLN_FOCUS_GROUP, CLN_LAST_UPDATED, COUNT(*) CLN_ENTYIES " +
	  		"FROM CLN_COLLECTION " +
	  		"JOIN CLN_COLLECTION_ITEM ON CLI_COLLECTION_FK = CLN_OID " +
	  		"JOIN REF_USER ON USR_OID = CLN_USER_FK " +
	  		"WHERE CLN_OID = ? " +
	  		"GROUP BY CLN_OID";
	  
	  public final static String COLLECTION_DETAIL_BY_NAME = "SELECT CLN_OID, CLN_NAME, CLN_USER_FK, USR_UNAME, CLN_TYPE, CLN_STATUS, CLN_DESCRIPTION, CLN_FOCUS_GROUP, CLN_LAST_UPDATED, COUNT(*) CLN_ENTYIES " +
	  		"FROM CLN_COLLECTION " +
	  		"JOIN CLN_COLLECTION_ITEM ON CLI_COLLECTION_FK = CLN_OID " +
	  		"JOIN REF_USER ON USR_OID = CLN_USER_FK " +
	  		"WHERE CLN_USER_FK = ? " +
	  		"AND CLN_NAME = ? " +
	  		"GROUP BY CLN_OID";
	    
	  public final static String COLLECTION_ITEM_LIST = "SELECT CLI_VALUE, CLN_TYPE FROM CLN_COLLECTION_ITEM, CLN_COLLECTION WHERE CLI_COLLECTION_FK = CLN_OID AND CLI_COLLECTION_FK = ?";
	  
	  public final static String REMOVED_SUBMISSION_LIST = "SELECT SUB_ACCESSION_ID FROM ISH_SUBMISSION WHERE SUB_IS_DELETED = 1";
	  
	  public final static String DELETE_COLLECTION_BY_ID = "DELETE FROM CLN_COLLECTION WHERE CLN_OID = ?";
	  
	  public final static String MAX_COLLECTION_ID = "SELECT MAX(CLN_OID) FROM CLN_COLLECTION";
	    
	  public final static String MAX_COLLECTION_ITEM_ID = "SELECT MAX(CLI_OID) FROM CLN_COLLECTION_ITEM";
	  
	  public final static String INSERT_COLLECTION = "INSERT INTO CLN_COLLECTION (CLN_OID, CLN_NAME, CLN_USER_FK, CLN_TYPE, CLN_STATUS, CLN_DESCRIPTION, CLN_FOCUS_GROUP, CLN_LAST_UPDATED, CLN_FOCUS_GROUP_NAME) " +
	  		"VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
	  
	  public final static String INSERT_COLELCTION_ITEM = "INSERT INTO CLN_COLLECTION_ITEM (CLI_OID, CLI_COLLECTION_FK, CLI_VALUE) " +
	  		"VALUES (?, ?, ?)";
	  
	  public final static String UPDATE_COLLECTION_SUMMARY = "UPDATE CLN_COLLECTION " +
	  		"SET CLN_NAME = ?, " +
	  		"CLN_STATUS = ?, " +
	  		"CLN_DESCRIPTION = ?, " +
	  		"CLN_FOCUS_GROUP = ?, " +
	  		"CLN_FOCUS_GROUP_NAME = ?, " +
	  		"CLN_LAST_UPDATED = ? " +
	  		"WHERE CLN_OID = ?";
	  
	 public final static String INSITU_SUBMISSION_IMAGE_ID_BY_GENE_SYMBOL = "SELECT CONCAT(SUB_OID, '_', IMG_FILENAME) FROM ISH_ORIGINAL_IMAGE " +
				"JOIN ISH_SUBMISSION ON IMG_SUBMISSION_FK = SUB_OID " +
				"JOIN ISH_PROBE ON PRB_SUBMISSION_FK = SUB_OID " +
				"JOIN REF_PROBE ON PRB_MAPROBE = RPR_OID " +
				"LEFT JOIN REF_STAGE ON SUB_STAGE_FK = STG_OID " +
				"WHERE RPR_SYMBOL = ? AND IMG_TYPE NOT LIKE '%wlz%' " +
				"AND SUB_IS_PUBLIC = 1 AND SUB_IS_DELETED = 0 AND SUB_DB_STATUS_FK = 4 " +
				"ORDER BY STG_STAGE_DISPLAY, natural_sort(SUB_ACCESSION_ID), IMG_ORDER";
	 
	 public final static String INSITU_SUBMISSION_IMAGE_ID_BY_GENE_SYMBOLID = "SELECT CONCAT(SUB_OID, '_', IMG_FILENAME) FROM ISH_ORIGINAL_IMAGE " +
				"JOIN ISH_SUBMISSION ON IMG_SUBMISSION_FK = SUB_OID " +
				"JOIN ISH_PROBE ON PRB_SUBMISSION_FK = SUB_OID " +
				"JOIN REF_PROBE ON PRB_MAPROBE = RPR_OID " +
				"LEFT JOIN REF_STAGE ON SUB_STAGE_FK = STG_OID " +
				"WHERE RPR_LOCUS_TAG = ? AND IMG_TYPE NOT LIKE '%wlz%' " +
				"AND SUB_IS_PUBLIC = 1 AND SUB_IS_DELETED = 0 AND SUB_DB_STATUS_FK = 4 " +
				"AND IMG_IS_PUBLIC = 1 " +
				"ORDER BY STG_STAGE_DISPLAY, natural_sort(SUB_ACCESSION_ID), IMG_ORDER";
	 
	public final static String REMOVE_COLLECTION_ITEMS = "DELETE FROM CLN_COLLECTION_ITEM WHERE CLI_COLLECTION_FK = ? AND CLI_VALUE = ?";

}
